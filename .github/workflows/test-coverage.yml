name: Test Coverage

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv sync
    
    - name: Debug environment
      run: |
        echo "üîç Environment information:"
        echo "Python version: $(python --version)"
        echo "Current directory: $(pwd)"
        echo "Environment variables:"
        env | grep -E "(VECTOR_DATABASE|QDRANT|OPENAI)" || echo "No relevant env vars set"
        echo "Installed packages:"
        uv pip list | grep -E "(qdrant|pytest|openai)" || true
    
    - name: Run unit tests with coverage
      env:
        VECTOR_DATABASE: qdrant
        QDRANT_URL: http://localhost:6333
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-mocks' }}
      run: |
        echo "üß™ Running unit tests with coverage..."
        uv run pytest tests/test_utils_refactored.py tests/test_database_factory.py tests/test_crawl4ai_mcp.py \
          -vv --tb=short --cov=src --cov-report=xml --cov-report=html:htmlcov --cov-report=term-missing
    
    - name: Run adapter tests
      env:
        VECTOR_DATABASE: qdrant
        QDRANT_URL: http://localhost:6333
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-mocks' }}
      run: |
        echo "üîó Running adapter tests..."
        uv run pytest tests/test_supabase_adapter.py tests/test_qdrant_adapter.py \
          -vv --tb=short --cov=src --cov-append --cov-report=xml --cov-report=html:htmlcov --cov-report=term-missing
    
    - name: Run interface tests
      env:
        VECTOR_DATABASE: qdrant
        QDRANT_URL: http://localhost:6333
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-mocks' }}
      run: |
        echo "üìã Running interface tests..."
        uv run pytest tests/test_database_interface.py tests/test_integration_simple.py \
          -vv --tb=short --cov=src --cov-append --cov-report=xml --cov-report=html:htmlcov --cov-report=term-missing
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Generate coverage report
      run: |
        uv run coverage report --fail-under=80
    
    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      if: always() && (success() || failure())
      with:
        name: coverage-reports
        path: |
          coverage.xml
          htmlcov/
        if-no-files-found: warn