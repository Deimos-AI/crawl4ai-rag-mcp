{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start Development Environment",
      "type": "shell",
      "command": "make",
      "args": ["dev-bg"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "Stop Development Environment", 
      "type": "shell",
      "command": "make",
      "args": ["dev-down"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Start Test Services",
      "type": "shell", 
      "command": "make",
      "args": ["docker-test-up-wait"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Stop Test Services",
      "type": "shell",
      "command": "make", 
      "args": ["docker-test-down"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Unit Tests",
      "type": "shell",
      "command": "make",
      "args": ["test-unit"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "pytest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+): (.*)$",
            "file": 1,
            "line": 2,
            "message": 3
          }
        ]
      }
    },
    {
      "label": "Run Integration Tests", 
      "type": "shell",
      "command": "make",
      "args": ["test-integration"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOn": ["Start Test Services"],
      "problemMatcher": {
        "owner": "pytest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+): (.*)$",
            "file": 1,
            "line": 2,
            "message": 3
          }
        ]
      }
    },
    {
      "label": "Run All Tests",
      "type": "shell",
      "command": "make",
      "args": ["test-all"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOn": ["Start Test Services"],
      "problemMatcher": {
        "owner": "pytest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+): (.*)$",
            "file": 1,
            "line": 2,
            "message": 3
          }
        ]
      }
    },
    {
      "label": "Run Tests with Coverage",
      "type": "shell",
      "command": "make",
      "args": ["test-coverage"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }, 
      "problemMatcher": {
        "owner": "pytest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+): (.*)$",
            "file": 1,
            "line": 2,
            "message": 3
          }
        ]
      }
    },
    {
      "label": "Format Code",
      "type": "shell",
      "command": "make",
      "args": ["format"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint Code",
      "type": "shell",
      "command": "make", 
      "args": ["lint"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "ruff",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+):(\\d+): ([WE]\\d+) (.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "code": 4,
            "message": 5
          }
        ]
      }
    },
    {
      "label": "Type Check",
      "type": "shell",
      "command": "make",
      "args": ["type-check"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "mypy",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+): (error|warning|note): (.*)$",
            "file": 1,
            "line": 2,
            "severity": 3,
            "message": 4
          }
        ]
      }
    },
    {
      "label": "Validate All",
      "type": "shell",
      "command": "make",
      "args": ["validate"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOrder": "sequence",
      "dependsOn": ["Lint Code", "Type Check", "Run Unit Tests"],
      "problemMatcher": []
    },
    {
      "label": "Build Docker Images",
      "type": "shell",
      "command": "make",
      "args": ["build"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Rebuild Docker Images (No Cache)",
      "type": "shell", 
      "command": "make",
      "args": ["build-no-cache"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "View Development Logs",
      "type": "shell",
      "command": "make",
      "args": ["dev-logs"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "View Test Service Logs",
      "type": "shell",
      "command": "make",
      "args": ["docker-test-logs-follow"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Clean Artifacts",
      "type": "shell",
      "command": "make",
      "args": ["clean"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Clean All (Including Volumes)",
      "type": "shell",
      "command": "make",
      "args": ["clean-all"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Install Dependencies",
      "type": "shell",
      "command": "make",
      "args": ["deps"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Check Service Health",
      "type": "shell",
      "command": "make",
      "args": ["health"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Open Qdrant Dashboard",
      "type": "shell",
      "command": "make",
      "args": ["qdrant-shell"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Open Neo4j Browser",
      "type": "shell",
      "command": "make",
      "args": ["neo4j-shell"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Quick Test (Current File)",
      "type": "shell",
      "command": "uv",
      "args": ["run", "pytest", "${file}", "-v", "--tb=short"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "env": {
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      },
      "problemMatcher": {
        "owner": "pytest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": [
          {
            "regexp": "^(.*):(\\d+): (.*)$",
            "file": 1,
            "line": 2,
            "message": 3
          }
        ]
      }
    },
    {
      "label": "Watch Mode Tests",
      "type": "shell",
      "command": "make",
      "args": ["test-watch"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "isBackground": true,
      "problemMatcher": []
    }
  ]
}