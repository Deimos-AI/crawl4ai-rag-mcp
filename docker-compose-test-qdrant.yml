version: '3.8'

# Test configuration that includes Qdrant for automated testing
# Usage: docker compose -f docker-compose.yml -f docker-compose-test-qdrant.yml up

services:
  # Override MCP service for testing
  mcp-crawl4ai:
    environment:
      # Force Qdrant for testing
      - VECTOR_DATABASE=qdrant
      - QDRANT_URL=http://qdrant:6333
      - TEST_MODE=true
    depends_on:
      qdrant:
        condition: service_healthy
      searxng:
        condition: service_healthy
      valkey:
        condition: service_started
    volumes:
      # Mount test files
      - ./tests:/app/tests:ro
      - ./scripts:/app/scripts:ro
      # Test output directory
      - ./test-output:/app/test-output

  # Qdrant service for testing
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-test
    ports:
      - "6333:6333"
    volumes:
      - qdrant-test-data:/qdrant/storage
    networks:
      - default
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__LOG_LEVEL=info
      # Optimize for testing (faster startup, less persistence)
      - QDRANT__STORAGE__PERFORMANCE__OPTIMIZERS_OVERWRITE=true
      - QDRANT__STORAGE__PERFORMANCE__INDEXING_THRESHOLD=1000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  # Test runner service (optional - for CI/CD)
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
    image: mcp-crawl4ai-test:latest
    container_name: test-runner
    environment:
      - VECTOR_DATABASE=qdrant
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY:-test-key}
      - SEARXNG_URL=http://searxng:8080
      - TEST_MODE=true
    volumes:
      - ./tests:/app/tests:ro
      - ./scripts:/app/scripts:ro
      - ./test-output:/app/test-output
      - ./htmlcov:/app/htmlcov
    networks:
      - default
    depends_on:
      qdrant:
        condition: service_healthy
      mcp-crawl4ai:
        condition: service_healthy
    command: |
      bash -c "
        echo 'Starting automated tests...'
        pytest tests/test_qdrant_integration.py -v --tb=short
        python tests/benchmark_qdrant.py
        echo 'Tests completed!'
      "
    profiles:
      - test  # Only run when explicitly requested

volumes:
  qdrant-test-data:
    driver: local

# Network configuration is inherited from main docker-compose.yml